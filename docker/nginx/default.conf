server {
    # Nginxがコンテナ内でリッスンするポート番号
    listen 80;
    # listen [::]:80; # IPv6も有効にする場合

    # ドキュメントルートの設定
    # docker-compose.ymlのvolumesでマウントした /var/www/html の中の
    # Laravelの公開ディレクトリ 'public' を指定します。
    root /var/www/html/public;

    # アクセスされた際のデフォルトファイル
    # index.php を最初にして、Laravelのフロントコントローラーが呼ばれるようにします。
    index index.php index.html index.htm;

    # サーバー名 (開発環境では '_' や 'localhost' でOK)
    server_name _;

    # 文字コード
    charset utf-8;

    # アクセスログとエラーログの出力先 (コンテナ内のパス)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # location / ブロック: 全てのリクエストにマッチ
    location / {
        # try_files: 指定された順番でファイルを探し、最初に見つかったものを返す。
        # $uri: リクエストされたURI (例: /css/app.css)
        # $uri/: リクエストされたURIがディレクトリの場合 (例: /images/)
        # /index.php?$query_string: 上記で見つからない場合、リクエストをLaravelのindex.phpに内部転送する
        #                        クエリ文字列 (例: ?page=2) も引き継ぐ
        try_files $uri $uri/ /index.php?$query_string;
    }

    # location ~ \.php$ ブロック: URIが .php で終わるリクエストにマッチ
    location ~ \.php$ {
        # ファイルが存在しない場合は 404 エラーを返す
        try_files $uri =404;

        # FastCGI関連の設定
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # PHP-FPMコンテナへのリクエスト転送設定 ★重要★
        # fastcgi_pass で 'php' サービスの '9000' 番ポートを指定します。
        # 'php' は docker-compose.yml で定義したPHPサービスのコンテナ名(またはサービス名)。
        # Dockerのネットワーク機能により、サービス名で名前解決できます。
        # 9000 は PHP-FPMがデフォルトでリッスンしているポート番号。
        fastcgi_pass   php:9000;

        fastcgi_index index.php;

        # FastCGIの標準的なパラメータを読み込む
        include fastcgi_params;

        # PHPスクリプトのファイルパスをPHP-FPMに伝えるためのパラメータ
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # .htaccess や .htpasswd ファイルへのアクセスを禁止 (セキュリティ対策)
    location ~ /\.ht {
        deny all;
    }

    # アップロードファイルサイズの上限設定 (任意、デフォルトは小さいので必要なら設定)
    client_max_body_size 100M;
}